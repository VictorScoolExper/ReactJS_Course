{"ast":null,"code":"var _jsxFileName = \"/home/victorsoft/Documents/GitHub/ReactJS_Course/04-ReactState&Events/src/components/NewExpense/ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = () => {\n  _s();\n\n  const {\n    enteredTitle,\n    setEnteredTitle\n  } = useState('');\n  const {\n    enteredAmount,\n    setEnteredAmount\n  } = useState('');\n  const {\n    enteredDate,\n    setEnteredDate\n  } = useState(''); // const {userInput, setUserInput} = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // })\n  //handler should be add to name when it refers to change \n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value); // setUserInput({\n    //     //use the spread operator to pull out the value pairs.\n    //     ...userInput,\n    //     enteredTitle: event.target.value           \n    // });\n    //Safer way to operate of the current state snapshot\n    //setUserInput((prevState)=>{\n    //    return {...prevState, enteredTitle: event.target.value};\n    //})\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value); // setUserInput({\n    //     //use the spread operator to pull out the value pairs.\n    //     ...userInput,\n    //     enteredAmount: event.target.value           \n    // });\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value); // setUserInput({\n    //     //use the spread operator to pull out the value pairs.\n    //     ...userInput,\n    //     enteredDate: event.target.value           \n    // });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2022-01-01\",\n          step: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpenseForm, \"0Y2mKqn3rJ9/w89PsZWwwmN5tLY=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["/home/victorsoft/Documents/GitHub/ReactJS_Course/04-ReactState&Events/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAG,MAAK;AAAA;;AAErB,QAAM;AAACC,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAAkCH,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAACI,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAAoCL,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAACM,IAAAA,WAAD;AAAcC,IAAAA;AAAd,MAAgCP,QAAQ,CAAC,EAAD,CAA9C,CAJqB,CAKrB;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMQ,kBAAkB,GAAIC,KAAD,IAAU;AACjCN,IAAAA,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CADiC,CAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAXD;;AAaA,QAAMC,mBAAmB,GAAIH,KAAD,IAAU;AAClCJ,IAAAA,gBAAgB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAhB,CADkC,CAElC;AACA;AACA;AACA;AACA;AACH,GAPD;;AASA,QAAME,iBAAiB,GAAIJ,KAAD,IAAU;AAChCF,IAAAA,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CADgC,CAEhC;AACA;AACA;AACA;AACA;AACH,GAPD;;AASA,QAAMG,aAAa,GAAIL,KAAD,IAAU;AAC5BA,IAAAA,KAAK,CAACM,cAAN;AAEA,UAAMC,WAAW,GAAG;AAChBC,MAAAA;AADgB,KAApB;AAGH,GAND;;AAQA,sBAAO;AAAM,IAAA,QAAQ,EAAEH,aAAhB;AAAA,4BACK;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,QAAQ,EAAEN;AAA7B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,QAAZ;AAAqB,UAAA,GAAG,EAAC,MAAzB;AAAgC,UAAA,IAAI,EAAC,MAArC;AAA4C,UAAA,QAAQ,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,GAAG,EAAC,YAAvB;AAAoC,UAAA,IAAI,EAAC,YAAzC;AAAsD,UAAA,QAAQ,EAAEC;AAAhE;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAgBK;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAhBL;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAoBH,CAvED;;GAAMZ,W;;KAAAA,W;AAyEN,eAAeA,WAAf","sourcesContent":["import React, {useState} from 'react'\n\nimport './ExpenseForm.css'\n\nconst ExpenseForm = () =>{\n\n    const {enteredTitle, setEnteredTitle} = useState('');\n    const {enteredAmount, setEnteredAmount} = useState('');\n    const {enteredDate, setEnteredDate} = useState('');\n    // const {userInput, setUserInput} = useState({\n    //     enteredTitle: '',\n    //     enteredAmount: '',\n    //     enteredDate: ''\n    // })\n\n    //handler should be add to name when it refers to change \n    const titleChangeHandler = (event) =>{\n        setEnteredTitle(event.target.value);\n        // setUserInput({\n        //     //use the spread operator to pull out the value pairs.\n        //     ...userInput,\n        //     enteredTitle: event.target.value           \n        // });\n        //Safer way to operate of the current state snapshot\n        //setUserInput((prevState)=>{\n        //    return {...prevState, enteredTitle: event.target.value};\n        //})\n    }\n\n    const amountChangeHandler = (event) =>{\n        setEnteredAmount(event.target.value);\n        // setUserInput({\n        //     //use the spread operator to pull out the value pairs.\n        //     ...userInput,\n        //     enteredAmount: event.target.value           \n        // });\n    }\n    \n    const dateChangeHandler = (event) =>{\n        setEnteredDate(event.target.value);\n        // setUserInput({\n        //     //use the spread operator to pull out the value pairs.\n        //     ...userInput,\n        //     enteredDate: event.target.value           \n        // });\n    }\n\n    const submitHandler = (event) =>{\n        event.preventDefault();\n\n        const expenseData = {\n            title\n        }\n    }\n\n    return <form onSubmit={submitHandler}>\n                <div className='new-expense__controls'>\n                    <div className='new-expense__control'>\n                        <label>Title</label>\n                        <input type='text' onChange={titleChangeHandler}/>\n                    </div>\n                    <div className='new-expense__control'>\n                        <label>Amount</label>\n                        <input type='number' min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\n                    </div>\n                    <div className='new-expense__control'>\n                        <label>Date</label>\n                        <input type='date' min=\"2022-01-01\" step=\"2022-12-31\" onChange={dateChangeHandler}/>\n                    </div>\n                </div>\n\n                <div className=\"new-expense__actions\">\n                    <button type='submit'>Add Expense</button>\n                </div>\n           </form>\n}\n\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}